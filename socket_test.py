from slack_bolt import App
from slack_bolt.adapter.socket_mode import SocketModeHandler
from config import RESTART_BOT_TOKEN, SOCKET_BOT_TOKEN

class SlackBot:
    def __init__(self, bot_token, app_token):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞"""
        self.app = App(token=bot_token)
        self.app_token = app_token
        self.register_events()  # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏

    def register_events(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        @self.app.event("message")
        def handle_messages(event, say):
            text = event.get("text", "").lower()
            user = event["user"]

            if "restart" in text:
                say(f"<@{user}>, detected 'restart'! Executing restart...")
            elif "status" in text:
                say("‚úÖ All systems operational!")

        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–æ–ª—å–∫–æ –¥–ª—è 'hello' """
        @self.app.message("hello")
        def handle_hello(message, say):
            user = message["user"]
            say(f"Hello, <@{user}>! How can I assist you today? üòä")

    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        handler = SocketModeHandler(self.app, self.app_token)
        handler.start()

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
if __name__ == "__main__":
    bot = SlackBot(bot_token=RESTART_BOT_TOKEN, app_token=SOCKET_BOT_TOKEN)
    bot.run()